import java.util.*;
public class Main {
static final int INF = 9999; 

public static void floydWarshall(int graph[][], int V) { int dist[][] = new int[V][V];

for (int i = 0; i < V; i++) {
for (int j = 0; j < V; j++) { dist[i][j] = graph[i][j];
}
}

for (int k = 0; k < V; k++) {
for (int i = 0; i < V; i++) {
for (int j = 0; j < V; j++) {
if (dist[i][k] + dist[k][j] < dist[i][j]) {
dist[i][j] = dist[i][k] + dist[k][j];
}
}
}
}

for (int i = 0; i < V; i++) {
for (int j = 0; j < V; j++) { if (dist[i][j] == INF) {
System.out.print("INF\t");
} else {
System.out.print(dist[i][j] + "\t");
}
}
System.out.println();
}
}

public static void main(String[] args) {  

Scanner sc=new Scanner(System.in);
int V=sc.nextInt();
int graph[][]=new int[V][V];
for(int i=0;i<V;i++)
{
    for(int j=0;j<V;j++)
    {
    graph[i][j]=sc.nextInt();
    }
}
floydWarshall(graph, V);
}

}
